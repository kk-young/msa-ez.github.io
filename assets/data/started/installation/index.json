{"hash":"36e4d57018fefdaf5949fa23179b61d2807751f0","data":{"markdownPage":{"id":"e2d579c841c3d2f8e1149168e8549fa5","title":"도구 사용법","description":"","path":"/started/installation/","timeToRead":7,"content":"<h1 id=\"도구-사용법\"><a href=\"#%EB%8F%84%EA%B5%AC-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>도구 사용법</h1>\n<h2 id=\"msaeasy로-msa-개발하기\"><a href=\"#msaeasy%EB%A1%9C-msa-%EA%B0%9C%EB%B0%9C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MSAEasy로 MSA 개발하기</h2>\n<h2 id=\"서비스-접속\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%A0%91%EC%86%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>서비스 접속</h2>\n<p><a href=\"http://eventstorming2code.io\" target=\"_blank\" rel=\"noopener noreferrer\">eventstorming2code.io</a> 에 접속한다. 크롬추천.</p>\n<h2 id=\"예제-프로젝트\"><a href=\"#%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예제 프로젝트</h2>\n<p>예제 프로젝트는 주문 서비스와 배송 서비스 2개의 서비스를 EventStorming하여 Spring-boot로 실행되는 Java Project를 생성하고 이들을 구글클라우드의 쿠버네티스에 자동 배포하는 과정이다.</p>\n<h2 id=\"ui-소개\"><a href=\"#ui-%EC%86%8C%EA%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>UI 소개</h2>\n<h3 id=\"ui-레이아웃\"><a href=\"#ui-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>UI 레이아웃</h3>\n<p>EventStorming2Code 도구의 전체 화면 레이아웃은 다음과 같다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image30.png\"></p>\n<p align=\"center\"> 그림 1 도구 전체 레이아웃 </p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Zoom Panel</td>\n<td>캔버스에 작성된 화면을 확대 및 축소 기능</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Code Preview</td>\n<td>Code를 생성 및 확인 가능한 기능</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Download Archive</td>\n<td>Code를 생성 및 다운로드 가능한 기능</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Project Name</td>\n<td>프로젝트 명 입력 (Java의 경우 Package명)</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Upload</td>\n<td>저장된 Json형태의 EventStorming파일을 불러오는 기능</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Save</td>\n<td>Draw된 EventStorming파일을 Json파일로 저장함</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Sticker Palette</td>\n<td>EventStorming을 위한 Sticky note를 선택할 수 있는 Palette</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Canvas</td>\n<td>Sticky note를 붙이는 Canvas</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"event\"><a href=\"#event\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event</h3>\n<p>스티커 팔레트에서 오랜지색 아이콘이 Event를 지칭한다.</p>\n<h4 id=\"event-추가하기\"><a href=\"#event-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 추가하기</h4>\n<p>스티커 팔레트에서 주황색 아이콘을 캔버스로 Drag &#x26; Drop하여 추가한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image31.png\"></p>\n<p align=\"center\">그림 2 Event Drag</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image32.png\"></p>\n<p align=\"center\">그림 3 Event Drop</p>\n</blockquote>\n<h4 id=\"event-속성-설정\"><a href=\"#event-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 속성 설정</h4>\n<p>추가된 Event 스티커를 더블 클릭하게 되면, 오른쪽에 아래와 같이 속성 창이 나타나며, 각 속성 설정에 대한 값은 아래와\n같다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image33.png\"></p>\n<p align=\"center\">그림 4 Event Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Event Name</td>\n<td>Event Sticky note에 작성될 이름</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Trigger</td>\n<td>Event를 발생시키는 엔티티의 Trigger</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Attribute</td>\n<td>Event의 Attribute들 등록</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Associated Aggregate</td>\n<td>Event와 연결 될 Aggregate 선택</td>\n</tr>\n</tbody>\n</table>\n<p>주문팀의 주문 시나리오에 따라 아래와 같이 기입한다.</p>\n<ol>\n<li>Event Name에 “<strong>OrderPlaced</strong>” 라고 기입한다.</li>\n<li>Trigger는 \"PrePersist\"를 선택한다.</li>\n<li>Attribute는 Event에서 사용할 Entity를 등록한다.<br>\n기본적으로는 아래의 4. 에서 Aggregate가 연결된다면 해당 Aggregate의 Entity정보를 참조한다.</li>\n<li>연결될 Aggregate를 선택한다. (이후에, Aggregate를 추가한 후에 선택하여 준다.)</li>\n</ol>\n<p>배송팀은 배송 시나리오에 따라 Event를 생성하여 준다.</p>\n<ol>\n<li>Event Name에 “<strong>DeliveryStarted</strong>” 라고 기입한다.</li>\n<li>Trigger는 PostUpdate를 선택한다.</li>\n<li>Attribute는 Event에서 사용할 Entity를 등록한다.<br>\n기본적으로는 아래의 4. 에서 Aggregate가 연결된다면 해당 Aggregate의 Entity정보를 참조한다.</li>\n<li>연결될 Aggregate를 선택한다. (이후에, Aggregate를 추가한 후에 선택하여 준다.)</li>\n</ol>\n<h3 id=\"policy\"><a href=\"#policy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Policy</h3>\n<p>Policy는 스티커 팔레트에서 라일락색 아이콘이 지칭한다.</p>\n<h4 id=\"policy-추가하기\"><a href=\"#policy-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Policy 추가하기</h4>\n<p>스티커 팔레트에서 라일락색 아이콘을 캔버스로 Drag &#x26; Drop하여 Policy를 추가한다</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image35.png\"></p>\n<p align=\"center\">그림 5 Policy Drag</p>\n<p><a href=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image36.png\"></a></p>\n<p align=\"center\">그림 6 Policy Drop</p>\n</blockquote>\n<h4 id=\"policy-속성-설정\"><a href=\"#policy-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Policy 속성 설정</h4>\n<p>추가된 Policy 스티커를 더블 클릭하게 되면, 오른쪽에 아래와 같이 속성 창이 나타나며, 각 속성 설정에 대한 값은 아래와\n같다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image37.png\"></p>\n<p align=\"center\">그림 7 Policy Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Policy Name</td>\n<td>Policy Sticky note에 작성될 이름</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Associated Aggregate</td>\n<td>Policy와 연결 될 Aggregate 선택</td>\n</tr>\n</tbody>\n</table>\n<p>해당 이벤트가 발생될 때의 업무에 따라서, 아래와 같이 기입한다.</p>\n<ol>\n<li>Policy Name에 “<strong>StartDelivery</strong>” 라고 기입한다.</li>\n<li>연결될 Aggregate를 선택한다. (이후에, Aggregate를 추가한 후에 선택하여 준다.)</li>\n</ol>\n<h3 id=\"command\"><a href=\"#command\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Command</h3>\n<p>Command는 스티커 팔레트에서 파란색 아이콘이 지칭한다.</p>\n<h4 id=\"command-추가하기\"><a href=\"#command-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Command 추가하기</h4>\n<p>스티커 팔레트에서 파란색 아이콘을 캔버스로 Drag &#x26; Drop하여 Command를 추가한다</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image38.png\"></p>\n<p align=\"center\">그림 8 Command Drag</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image39.png\"></p>\n<p align=\"center\">그림 9 Command Drop</p>\n</blockquote>\n<h4 id=\"command-속성-설정\"><a href=\"#command-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Command 속성 설정</h4>\n<p>추가된 Command 스티커를 더블 클릭하게 되면, 오른쪽에 아래와 같이 속성 창이 나타나며, 각 속성 설정에 대한 값은 아래와\n같다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image40.png\"></p>\n<p align=\"center\">그림 10 Command Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Command Name</td>\n<td>Command Sticky note에 작성될 이름</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Restful Type</td>\n<td>Restful API 의 CRUD Type을 선택</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Associated Aggregate</td>\n<td>Command와 연결 될 Aggregate 선택</td>\n</tr>\n</tbody>\n</table>\n<p>해당 이벤트가 발생될 때의 업무에 따라서, 아래와 같이 기입한다.</p>\n<ol>\n<li>Command Name에 “<strong>CreateOrder</strong>” 라고 기입한다.</li>\n<li>Restful Type은 POST로 설정한다.</li>\n<li>연결될 Aggregate를 선택한다. (이후에, Aggregate를 추가한 후에 선택하여 준다.)</li>\n</ol>\n<h3 id=\"어그리게잇-aggregate\"><a href=\"#%EC%96%B4%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9E%87-aggregate\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>어그리게잇 (Aggregate)</h3>\n<p>Aggregate는 스티커 팔레트에서 노란색 아이콘이 지칭한다.</p>\n<h4 id=\"어그리게잇-추가하기\"><a href=\"#%EC%96%B4%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9E%87-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>어그리게잇 추가하기</h4>\n<p>스티커 팔레트에서 노란색 아이콘을 캔버스로 Drag &#x26; Drop하여 Aggregate를 추가한다</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image41.png\"></p>\n<p align=\"center\"> 그림 10 Aggregate Drag</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image42.png\"></p>\n<p align=\"center\">그림 11 Aggregate Drop</p>\n</blockquote>\n<h4 id=\"어그리게잇-속성-설정\"><a href=\"#%EC%96%B4%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9E%87-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>어그리게잇 속성 설정</h4>\n<p>추가된 Aggregate 스티커를 더블 클릭하게 되면, 오른쪽에 아래와 같이 속성 창이 나타나며, 각 속성 설정에 대한 값은\n아래와 같다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image43.png\"></p>\n<p align=\"center\">그림 12 Aggregate Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Aggregate Name</td>\n<td>Aggregate Sticky note에 작성될 이름</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Attributes</td>\n<td>Aggregate Entity (Domain Entity)를 정의한다.</td>\n</tr>\n</tbody>\n</table>\n<p>주문 서비스의 Aggregate(Domain Entity)를 정의하기 위해, 아래와 같이 기입한다.</p>\n<ol>\n<li>Aggregate Name에 “<strong>Order</strong>” 라고 기입한다.</li>\n<li>Aggregate의 Entity(Domain Entity)를 정의하여 준다.<br>\n해당 서비스에서는 Type은 String인 Name이라는 Entity를 추가하여 준다.</li>\n</ol>\n<p>배송 서비스의 Aggregate(Domain Entity)를 정의하기 위해, 아래와 같이 기입한다.</p>\n<ol>\n<li>Aggregate Name에 “<strong>Delivery</strong>” 라고 기입한다.</li>\n<li>Aggregate의 Entity(Domain Entity)를 정의하여 준다.<br>\n해당 서비스에서는 Type은 String인 Address라는 Entity를 추가하여 준다.</li>\n</ol>\n<p>Aggregate를 추가 하였다면 각 Event, Command, Policy들의 Associate Aggregate를 설정하여,\nAggregate를 지정하여 준다.</p>\n<h3 id=\"bounded-context\"><a href=\"#bounded-context\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bounded Context</h3>\n<p>Bounded Context는 스티커 팔레트에서 점선 모양의 아이콘이 지칭한다.</p>\n<h4 id=\"bounded-context-추가하기\"><a href=\"#bounded-context-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bounded Context 추가하기</h4>\n<p>스티커 팔레트에서 점선 모양의 아이콘을 캔버스로 Drag &#x26; Drop하여 Bounded Context를 추가한다</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image44.png\"></p>\n<p align=\"center\">그림 13 Bounded Context Drag</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image45.png\"></p>\n<p align=\"center\">그림 14 Bounded Context Drop</p>\n</blockquote>\n<h4 id=\"bounded-context-속성-설정\"><a href=\"#bounded-context-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bounded Context 속성 설정</h4>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image46.png\"></p>\n<p align=\"center\">그림 15 Bounded Context Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Bounded Context Name</td>\n<td>Bounded Context에 작성될 이름</td>\n</tr>\n</tbody>\n</table>\n<p>주문 서비스의 Bounded Context와 배송 서비스의 Bounded Context를 그린 후, 각각의 서비스에 맞게\nEventStorming의 Sticky Note들을 각 Bounded Context에 Drag &#x26; Drop으로 넣어준다.</p>\n<p>상기 작성된 4.2.2부터 4.2.6까지의 작업을 완료하면 아래와 같은 형태의 EventStorming 결과물이 나온다.</p>\n<h3 id=\"relation\"><a href=\"#relation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Relation</h3>\n<p>Relation은Event 스티커에서 Policy 스티커로 연결되는 선을 지칭한다.</p>\n<h4 id=\"relation-추가\"><a href=\"#relation-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Relation 추가</h4>\n<p>Event 스티커에서 화살표 모양 아이콘을 선택, 또는 Drag 하여 연결될 Policy 스티커를 선택 또는 Drop하면\n연결된다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image47.png\"></p>\n<p align=\"center\">그림  16 Relation 선택 또는 Drag</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image2.png\"></p>\n<p align=\"center\">그림 17 Policy 선택 또는 Drop</p>\n</blockquote>\n<h4 id=\"relation-속성-설정\"><a href=\"#relation-%EC%86%8D%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Relation 속성 설정</h4>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image48.png\"></p>\n<p align=\"center\">그림 18 Relation Property Panel</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Type</td>\n<td>Event-Driven형식의 Pub/Sub 방식을 사용할 것인지, 또는 Request &#x26; Response 방식의 Restful API 방식을 사용할 것인지 설정</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Restful Type</td>\n<td>1번의 Type이 Request &#x26; Response 방식일 경우 CRUD중 어떠한 것을 사용할 것인지 설정</td>\n</tr>\n</tbody>\n</table>\n<p>주문 서비스의 OrderPlaced의 이벤트가 발생할 경우 StartDelivery가 시작되도록 연결하는데, 어떠한 방식으로\nStartDelivery를 시작하게 할 것인지를 설정하여 준다.</p>\n<ol>\n<li>Event-Driven 방식의 Pub/Sub 방식으로 설정하여 준다.</li>\n</ol>\n<h3 id=\"eventstorming-결과\"><a href=\"#eventstorming-%EA%B2%B0%EA%B3%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventStorming 결과</h3>\n<p>위의 이벤트 스토밍이 완료되면 아래 그림과 같이 나온다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image49.png\"></p>\n<p align=\"center\">그림 19 EventStorming 결과</p>\n</blockquote>\n<h3 id=\"코드-프리뷰\"><a href=\"#%EC%BD%94%EB%93%9C-%ED%94%84%EB%A6%AC%EB%B7%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>코드 프리뷰</h3>\n<p>Code Preview를 선택하면 EventStorming 된 결과를 Code Preview를 통하여 Code로 변환된 결과를\n확인 할 수 있다.</p>\n<h4 id=\"코드-프리뷰-레이아웃\"><a href=\"#%EC%BD%94%EB%93%9C-%ED%94%84%EB%A6%AC%EB%B7%B0-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>코드 프리뷰 레이아웃</h4>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image50.png\"></p>\n<p align=\"center\">그림 20 코드 프리뷰 레이아웃</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Select Template</td>\n<td>Template 중에서 어떤 Template을 사용하여 코드 생성 및 코드 확인 할 것인지 선택.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Code List</td>\n<td>선택된 Template에 따라서 생성된 폴더 구조와 파일들을 보여줌.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Code View</td>\n<td>선택된 파일의 Code를 표시해 줌.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"다운로드-아카이브\"><a href=\"#%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EC%95%84%EC%B9%B4%EC%9D%B4%EB%B8%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>다운로드 아카이브</h3>\n<p>Download Archive를 선택하면 Template을 선택할 수 있으며, EventStroming 된 결과를 Zip파일로\n다운로드 받을 수 있다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image51.png\"></p>\n<p align=\"center\">그림 21 Download Archive 템플릿 선택</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>번호</th>\n<th>이름</th>\n<th>기능 설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Select Template</td>\n<td>Template 중에서 어떤 Template을 사용하여 코드 생성 및 다운로드 받을 것인지 선택.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"빌드\"><a href=\"#%EB%B9%8C%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>빌드</h3>\n<h4 id=\"다운로드-파일-구조-설명\"><a href=\"#%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%ED%8C%8C%EC%9D%BC-%EA%B5%AC%EC%A1%B0-%EC%84%A4%EB%AA%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>다운로드 파일 구조 설명</h4>\n<ul>\n<li>Bounded Context 에 설정한 이름별(Order, Delivery)로 프로젝트가 생성이 되었고, 압축을 풀었을 시\n아래와 같은 구조를 가진다.</li>\n<li><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image52.png\" alt=\"스크린샷%202019-11-28%20오전%2011\"></li>\n<li>gateway 는 기본 제공되는 템플릿으로 spring-cloud-gateway 를 설정하는 방법을 나타내고있다.\n정상적으로 사용시에는 gateway/src/main/resource 의 application.yaml\n파일에서 routes 부분을 수정하여 사용하여야 한다.</li>\n<li>파일 구조는 아래와 같이 스티커별로 기본 템플릿에 의하여 생성이 되었다.<br>\nspring-boot 기반의 프로젝트 이며, maven 으로 리소스 관리를 한다.<br>\n파일 생성 위치나, 파일 안의 기본 내용을 생성시마다 변경을 하려면 다음 장의 커스텀 템플릿을 활용하면 된다.</li>\n</ul>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image53.png\" alt=\"스크린샷%202019-11-28%20오후%2012\"></p>\n</blockquote>\n<ul>\n<li>\n<p>application.yaml</p>\n<ul>\n<li>spring-boot 의 설정 파일이며, local 환경 변수와 Docker용 환경변수를 profile 설정으로\n분리하였다.</li>\n<li>이벤트 기반이기 때문에 메시지 처리를 위하여 spring-cloud-stream 라이브러리를 사용한다. 그 중에서\n브로커를 kafka 를 사용하여 설정되어있다.</li>\n</ul>\n</li>\n<li>\n<p>Dockerfile</p>\n<ul>\n<li>Docker image 를 생성할 때 필요한 파일이다.</li>\n<li>Docker 로 build 시 \"--spring.profiles.active=docker\" 로 설정되어 있어서\napplication.yaml 파일에서 설정한 프로파일을 읽게 된다.</li>\n</ul>\n</li>\n<li>\n<p>cloudbuild.yaml</p>\n<ul>\n<li>Google Cloud Build 에서 사용하는 pipeline 파일이다.</li>\n<li>기본설정으로 test-build-docker build-publish-deploy 단계가 설정되어있다.</li>\n<li>Docker publish 단계에서는 GCR (Google Container Registry) 에 이미지를\n배포한다.</li>\n<li>\n<p>Deploy 단계에서는 GKE 에 배포를 하게 되는데 이때 주의사항은 클러스터 이름과 Zone 을 설정해 줘야한다.\n아래 3가지 항목을 사용자에 맞추어 필수적으로 변경을 해줘야 한다.</p>\n<ul>\n<li>substitutions._PROJECT_NAME: 항목에서 어떤 service 와 deploy 명으로\n배포를 할지 정해지는데, 해당 부분을 변경해 줘야한다.</li>\n<li>CLOUDSDK_COMPUTE_ZONE: 설정되어있는 Zone 은 도쿄(asia-northeast1-a)\n로 설정이 되어있다.</li>\n<li>CLOUDSDK_CONTAINER_CLUSTER: 클러스터 이름은 standard-cluster-1 으로\ndefault 클러스터 이름이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"선행사항\"><a href=\"#%EC%84%A0%ED%96%89%EC%82%AC%ED%95%AD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>선행사항</h4>\n<ul>\n<li>maven 설치</li>\n<li>local kafka 실행 – localhost:9092</li>\n</ul>\n<h4 id=\"실행\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>실행</h4>\n<ul>\n<li>메이븐 프로젝트이기 때문에 mvn spring-boot:run 으로 실행을 한다.</li>\n<li>정상적으로 실행이 되었다면 브라우저에 localhost:8081 (port 는 프로젝트별로 다르기 때문에 설정파일 참조)\n을 적어보면 Aggregate 에 설정하였던 속성값들이 HATEOAS 수준으로 정상적으로 나오는지를 확인한다.</li>\n<li>Command 에 작성하였던 get, post 등의 메서드가 정상적으로 호출되는지 확인한다.</li>\n</ul>\n<h3 id=\"클라우드-배포\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>클라우드 배포</h3>\n<p>이번 가이드항목은 작동하는 소스코드를 github 에 올리고 GCB 트리거를 생성하여 자동 빌드되고 배포되는 방법을 guide\n한다.</p>\n<h4 id=\"git-연동\"><a href=\"#git-%EC%97%B0%EB%8F%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Git 연동</h4>\n<ul>\n<li>GCB 는 git repository 를 현재까지 github, google code, bitbucket 을 지원한다. 본\n가이드는 이중에서 github 에 코드를 넣는 방법을\n설명한다.</li>\n<li><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"underline\">https://github.com/</span></a>\n에서 레파지토리를 생성한다.</li>\n<li>레파지토리를 생성 하고 git 주소가 생성이 된다</li>\n<li>github 에 올리려는 프로젝트에서 아래와 같은 스크립트를 실행하여 github 에 source 를 push 한다.</li>\n<li>git init</li>\n<li>git commit –m ‘commit message’ .</li>\n<li>git push \\&#x3C;github 주소></li>\n</ul>\n<h4 id=\"gcb-trigger-생성\"><a href=\"#gcb-trigger-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GCB Trigger 생성</h4>\n<p>GCB 트리거 생성은 아래와 같은 순서대로 진행을\n한다.</p>\n<ol>\n<li>\n<p>GCP 의 GCB 메뉴로 들어가서 트리거 메뉴를 클릭한다.  </p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image54.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>상단의 저장소 연결 버튼을 클릭한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image55.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>저장소 선택에서 github을 선택한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image56.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>깃헙 인증을 하여 진행한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image57.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>연결할 프로젝트를 선택하여 저장소 연결을 마무리 한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image58.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>상단의 트리거 생성 버튼을 클릭하여 트리거를 생성한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image59.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>트리거 생성 화면의 하단에 빌드 구성을 CloudBuild 로 선택한다.</p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image60.png\"></p>\n</blockquote>\n</li>\n<li>\n<p>트리거 만들기 버튼을 클릭하여 트리거생성을 완료한다. 오른쪽의 트리거 실행버튼으로 바로 트리거 실행을 할 수 있다. </p>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image61.png\"></p>\n</blockquote>\n</li>\n</ol>\n<p>위와 같이 트리거를 생성하였으면, github 에 push 명령을 실행할 때마다, 트리거가 작동하는 것을 확인 할 수 있다.</p>\n<h4 id=\"쿠버네티스-배포\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>쿠버네티스 배포</h4>\n<h5 id=\"쿠버네티스-배포-확인\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EB%B0%B0%ED%8F%AC-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>쿠버네티스 배포 확인</h5>\n<ul>\n<li>트리거가 정상적으로 실행을 하였으면 기록 메뉴에서 빌드 성공/실패 여부를 확인 할 수있다.</li>\n</ul>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image62.png\"></p>\n</blockquote>\n<ul>\n<li>빌드 기록에 녹색으로 성공화면이 떠있으면 GKE 에 성공적으로 배포가 된 것이다. GKE 메뉴의 작업 부하 항목에서 현재\n동작하는 서비스를 확인 할 수\n있다.</li>\n</ul>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image63.png\"></p>\n</blockquote>\n<h5 id=\"배포-실패시-해결방법\"><a href=\"#%EB%B0%B0%ED%8F%AC-%EC%8B%A4%ED%8C%A8%EC%8B%9C-%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배포 실패시 해결방법</h5>\n<ul>\n<li>빌드 실패시 기록 항목에서 아래와 같이 빨간색으로 빌드 실패가 나타나고, 클릭시 어떤 step 에서 에러가 났는지 확인이 가능하다. 로그 다운로드 버튼을 눌러서 상세 로그를 확인하면서 해결이 가능하다.</li>\n</ul>\n<blockquote>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image64.png\"></p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image65.png\"></p>\n</blockquote>\n<ul>\n<li>deploy 단계에서 에러가 났을 경우 첫번째로 GCB 에서 GKE 로 배포를 하는 권한이 있는지 체크해 보고, 없을 때 권한 설정을 해준다.</li>\n</ul>\n<blockquote>\n<p>Cloud빌드 – 설정 메뉴에서 Kubernetes Engine 개발자가 사용설정됨 으로 상태가 보이는지 확인하고,\n안되어있을시 사용 설정한다.</p>\n<p><img src=\"/Users/kibum0405/Desktop/msaeasy-intro/src/img/image66.png\"></p>\n</blockquote>\n<ul>\n<li>cloudBuild.yaml 파일의 option 부분에 클러스터 Zone 과 이름이 일치하는지 확인 한다.</li>\n</ul>\n<pre class=\" language-yaml\">\n\noptions :  \n    env:  \n    ## location/name of GKE cluster (used by all kubectl commands)  \n    - CLOUDSDK_COMPUTE_ZONE=asia-northeast1-a  \n    - CLOUDSDK_CONTAINER_CLUSTER=standard-cluster-1\n    \n</pre>\n","sidebar":"started","next":"/started/writing-content/","prev":"/started/","headings":[{"depth":1,"value":"도구 사용법","anchor":"#도구-사용법"},{"depth":2,"value":"MSAEasy로 MSA 개발하기","anchor":"#msaeasy로-msa-개발하기"},{"depth":2,"value":"서비스 접속","anchor":"#서비스-접속"},{"depth":2,"value":"예제 프로젝트","anchor":"#예제-프로젝트"},{"depth":2,"value":"UI 소개","anchor":"#ui-소개"},{"depth":3,"value":"UI 레이아웃","anchor":"#ui-레이아웃"},{"depth":3,"value":"Event","anchor":"#event"},{"depth":4,"value":"Event 추가하기","anchor":"#event-추가하기"},{"depth":4,"value":"Event 속성 설정","anchor":"#event-속성-설정"},{"depth":3,"value":"Policy","anchor":"#policy"},{"depth":4,"value":"Policy 추가하기","anchor":"#policy-추가하기"},{"depth":4,"value":"Policy 속성 설정","anchor":"#policy-속성-설정"},{"depth":3,"value":"Command","anchor":"#command"},{"depth":4,"value":"Command 추가하기","anchor":"#command-추가하기"},{"depth":4,"value":"Command 속성 설정","anchor":"#command-속성-설정"},{"depth":3,"value":"어그리게잇 (Aggregate)","anchor":"#어그리게잇-aggregate"},{"depth":4,"value":"어그리게잇 추가하기","anchor":"#어그리게잇-추가하기"},{"depth":4,"value":"어그리게잇 속성 설정","anchor":"#어그리게잇-속성-설정"},{"depth":3,"value":"Bounded Context","anchor":"#bounded-context"},{"depth":4,"value":"Bounded Context 추가하기","anchor":"#bounded-context-추가하기"},{"depth":4,"value":"Bounded Context 속성 설정","anchor":"#bounded-context-속성-설정"},{"depth":3,"value":"Relation","anchor":"#relation"},{"depth":4,"value":"Relation 추가","anchor":"#relation-추가"},{"depth":4,"value":"Relation 속성 설정","anchor":"#relation-속성-설정"},{"depth":3,"value":"EventStorming 결과","anchor":"#eventstorming-결과"},{"depth":3,"value":"코드 프리뷰","anchor":"#코드-프리뷰"},{"depth":4,"value":"코드 프리뷰 레이아웃","anchor":"#코드-프리뷰-레이아웃"},{"depth":3,"value":"다운로드 아카이브","anchor":"#다운로드-아카이브"},{"depth":3,"value":"빌드","anchor":"#빌드"},{"depth":4,"value":"다운로드 파일 구조 설명","anchor":"#다운로드-파일-구조-설명"},{"depth":4,"value":"선행사항","anchor":"#선행사항"},{"depth":4,"value":"실행","anchor":"#실행"},{"depth":3,"value":"클라우드 배포","anchor":"#클라우드-배포"},{"depth":4,"value":"Git 연동","anchor":"#git-연동"},{"depth":4,"value":"GCB Trigger 생성","anchor":"#gcb-trigger-생성"},{"depth":4,"value":"쿠버네티스 배포","anchor":"#쿠버네티스-배포"},{"depth":5,"value":"쿠버네티스 배포 확인","anchor":"#쿠버네티스-배포-확인"},{"depth":5,"value":"배포 실패시 해결방법","anchor":"#배포-실패시-해결방법"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/started/writing-content/","title":"커스텀 템플릿 만들기"}},{"node":{"path":"/started/sidebar/","title":"Sidebar"}},{"node":{"path":"/started/settings/","title":"이벤트스토밍 학습"}},{"node":{"path":"/started/installation/","title":"도구 사용법"}},{"node":{"path":"/started/deploying/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/","title":"소개"}}]}},"context":{}}